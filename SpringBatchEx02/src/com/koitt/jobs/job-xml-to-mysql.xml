<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

<!-- ItemReader 빈 생성 -->
	<bean id="xmlItemReader" class="org.springframework.batch.item.xml.StaxEventItemReader">
		<property name="fragmentRootElementName" value="record" /> <!-- item하나에 해당하는 루트 element 이름(record)를 써준다 -->
		<property name="resource" value="file:c:/sample/ex04/report.xml" />
		<property name="unmarshaller" ref="reportUnmarshaller" />
		
	</bean>

	<!-- 
		UnMarshaller 빈 생성
		생성 방법은 Marshaller 생성 방법과 동일
		(여기서 UnMarshaller 뜻은 xml 파일을 VO로 변경한다는 뜻)
	 -->
	 <bean id="reportUnmarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
	 	<property name="classesToBeBound">
	 		<list>
	 			<value>com.koitt.model.Report</value>
	 		</list>
	 	</property>
	 </bean>
	 
	 <bean id="mysqlItemWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
	 	<property name="dataSource" ref="dataSource" />
	 	<property name="sql">
	 		<value> <!-- 네임파라미터(:date) 등 -->
	 		<![CDATA[
	 			INSERT INTO report(refId, name, age, dob, income)
	 			VALUES (:refId, :name, :age, :dob, :income)
	 		]]>
	 		</value>
	 	</property>
	 	<!-- 
	 		객체의 필드명과 SQL의 name 파라미터(콜론+객체필드명) 사이를 자동으로 연결(Mapping)
	 		시켜준다
	 	 -->
	 	 <property name="itemSqlParameterSourceProvider">
	 	 	<bean 
	 	 	class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
	 	 </property>
	 </bean>
	
<!-- Batch Job 빈 생성 -->
	<batch:job id="xmlToMySqlJob">
			<batch:step id="step1">
			<batch:tasklet>
				<batch:chunk reader="xmlItemReader" writer="mysqlItemWriter"
					commit-interval="2" /> <!-- 2행을 읽을때마다 -->
			</batch:tasklet>
		</batch:step>
	</batch:job>
</beans>
